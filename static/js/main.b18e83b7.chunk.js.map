{"version":3,"sources":["constants.js","utils/jwtHelper.js","graphql/user.js","components/shared/LoginPage.js","graphql/dept.js","graphql/prod.js","components/CRUProdModal.js","components/MoveModal.js","components/NavBar.js","components/ProdItem.js","components/ProdList.js","components/ModelList.js","components/shared/styled-semantic.js","components/shared/DetailsHeaderContainer.js","components/shared/DetailsHeaderSubitle.js","components/shared/DetailsHeaderTitle.js","components/shared/DetailsHeader.js","components/shared/CollapsableSection.js","components/DeptList.js","components/common/DataLoadErrorMessage.js","components/Store.js","App.js","serviceWorker.js","index.js"],"names":["AUTH_TOKEN","isTokenExpired","token","date","decoded","decode","exp","Date","setUTCSeconds","getTokenExpirationDate","console","log","valueOf","offsetSeconds","me","gql","_templateObject","login","_templateObject2","_templateObject3","MenuDiv","styled","div","LoginPage_templateObject","MenuHeader","Header","LoginPage_templateObject2","SSegment","Segment","LoginPage_templateObject3","LoginPage","state","email","password","sendingRequest","error","handleInputChange","attr","_this","setState","Object","defineProperty","value","submit","_callee","_this$state","result","regenerator_default","a","wrap","_context","prev","next","props","variables","sent","data","refreshToken","t0","message","stop","this","_this2","_this$state2","react_default","createElement","react","size","basic","Form","Field","type","placeholder","ref","onChange","Message","header","content","Button","primary","floated","disabled","loading","onClick","Component","compose","graphql","name","options","fetchPolicy","allDepts","dept_templateObject","deptFragment","dept_templateObject2","upsertProd","prod_templateObject","moveProds","prod_templateObject2","allDeptsAndModelsQuery","CRUProdModal_templateObject","CRUProdModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","close","handleSelChange","event","_ref","_this$setState","required","warn","concat","handleIntChange","_ref2","_this$setState2","min","max","intValue","parseInt","changeStatus","e","_ref3","preventDefault","stopPropagation","curVal","hasDefect","isSpoiled","confirm","mode","requiredFields","shouldExit","assign","apply","toConsumableArray","map","field","forEach","id","deptId","modelId","melt","number","year","input","meltShift","progress","objectSpread","deptIdErr","modelIdErr","meltErr","meltShiftErr","numberErr","yearErr","progressErr","k","prod","_this$props","trigger","deptOptions","text","modelOptions","query","depts","dept","models","model","Modal","onOpen","onClose","as","Content","onSubmit","Select","label","Group","widths","Input","active","color","Actions","Icon","update","cache","_ref5","newProd","fragment","readFragment","prods","filter","p","writeFragment","AllDeptsAndModelsQuery","MoveModal_templateObject","MoveModal","handleChange","allTypes","title","NavBar","visibleDeptTypes","filterDeptType","Menu","inverted","Item","components_CRUProdModal","icon","link","components_MoveModal","position","Dropdown","item","simple","className","_","includes","key","t","ProdItem","checked","handleClick","d","selectProd","preventPropagation","eb","_this$props$prod","List","labelPosition","Label","tag","Progress","percent","indicating","autoSuccess","attached","ProdList","divided","selection","components_ProdItem","AccordionTitle","Accordion","Title","ModelList_templateObject","AccordionContent","ModelList_templateObject2","ModelList","activeIndex","titleProps","index","newIndex","without","deptModels","deptModel","i","allProdsCount","length","prodsReadyCount","prodsDefectCount","prodsSpoiledCount","prodsInProgressCount","Detail","components_ProdList","theme","formLabel","detailsPL","colors","green","blue","getThemeColor","baseSet","w","m","ml","pl","fs","fw","c","lh","ta","ws","Span","inline","rest","objectWithoutProperties","styled_semantic_templateObject","esm_extends","styled_semantic_templateObject2","_ref4","styled_semantic_templateObject3","_templateObject4","cancel","_templateObject5","Caret","_templateObject6","_ref6","_templateObject7","Section","_ref7","activeColor","menu","_templateObject8","_ref8","head","minor","small","secondary","noIndent","topBorder","bottomBorder","children","_templateObject9","_ref9","showIf","Popup","_templateObject10","SDropdown","_templateObject11","SIcon","DetailsHeaderContainer_templateObject","SCaret","DetailsHeaderContainer_templateObject2","DetailsHeaderContainer","closeDetails","expanded","headerType","DetailsHeaderSubitle","DetailsHeaderTitle","subtitle","titleSize","styled_semantic_Header","shared_DetailsHeaderSubitle","DetailsHeader","shared_DetailsHeaderContainer","shared_DetailsHeaderTitle","OuterSection","CollapsableSection_templateObject","SSection","CollapsableSection_templateObject2","CollapsableSection","shared_DetailsHeader","DeptList_templateObject","DeptList","propDepts","cloneDeep","prodsCount","sortBy","groupBy","reduce","dMs","push","o","fluid","DeptList_SSegment","shared_CollapsableSection","components_ModelList","DataLoadErrorMessage","warning","dataTitle","Store","selectedProds","prodId","newList","to","prodIds","_this$props$allDepts","Container","components_NavBar","common_DataLoadErrorMessage","components_DeptList","_reponseData$moveProd","readQuery","allMovedProds","find","deptMovedProds","intersectionBy","differenceBy","writeQuery","Root","bootStrapData","localStorage","getItem","undefined","setItem","removeItem","client","resetStore","react_apollo_browser_umd","components_Store","shared_LoginPage","Boolean","window","location","hostname","match","ApolloClient","uri","request","operation","setContext","headers","Authorization","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b18e83b7.chunk.js","sourcesContent":["export const AUTH_TOKEN = 'kolmech-token'","import decode from 'jwt-decode'\r\n\r\nexport function getTokenExpirationDate(token) {\r\n  const decoded = decode(token)\r\n  if (!decoded.exp) {\r\n    return null\r\n  }\r\n  const date = new Date(0) // The 0 here is the key, which sets the date to the epoch\r\n  date.setUTCSeconds(decoded.exp)\r\n  return date\r\n}\r\n\r\nexport function isTokenExpired(token) {\r\n  const date = getTokenExpirationDate(token)\r\n  const offsetSeconds = 0\r\n  if (date === null) {\r\n    return false\r\n  }\r\n  console.log(date, new Date().valueOf() + offsetSeconds * 1000)\r\n  return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000)\r\n}\r\n","import gql from 'graphql-tag'\r\n\r\nexport const me = gql`\r\n\tquery Me {\r\n\t\tme {\r\n\t\t\tid\r\n\t\t\temail\r\n\t\t\tperson {\r\n\t\t\t\tfName\r\n\t\t\t\tlName\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport const meLocal = gql`\r\n\tquery MeLocal {\r\n\t\tme @client {\r\n\t\t\tperson {\r\n\t\t\t\tfName\r\n\t\t\t\tlName\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport const login = gql`\r\n\tmutation Login($email: String!, $password: String!) {\r\n\t\tlogin(email: $email, password: $password) {\r\n\t\t\ttoken\r\n\t\t}\r\n\t}\r\n`","import React, { Component, Fragment } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport { Header, Form, Message, Button, Segment } from 'semantic-ui-react'\r\n\r\nimport { graphql, compose } from 'react-apollo'\r\nimport { login } from '../../graphql/user'\r\n\r\nconst MenuDiv = styled.div`\r\n\tborder-bottom: 1px solid #7e7e81;\r\n\t// height: 35px;\r\n`\r\n\r\nconst MenuHeader = styled(Header)`\r\n\tdisplay: inline;\r\n\tpadding: 0 1rem !important;\r\n`\r\n\r\nconst SSegment = styled(Segment)`\r\n\tmax-width: 350px !important;\r\n\tmargin: auto !important;\r\n`\r\n\r\nclass LoginPage extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tsendingRequest: false,\r\n\t\terror: ''\r\n\t}\r\n\thandleInputChange = (attr) => {\r\n\t\tthis.setState({ [attr]: this[attr].value })\r\n\t}\r\n\tsubmit = async () => {\r\n\t\ttry {\r\n\t\t\tconst { email, password } = this.state\r\n\t\t\tthis.setState({ sendingRequest: true })\r\n\t\t\tconst result = await this.props.login({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst token = result.data.login.token\r\n\t\t\tthis.setState({ sendingRequest: false })\r\n\t\t\tthis.props.refreshToken(token)\r\n\t\t} catch (err) {\r\n\t\t\tthis.setState({ error: err.message, sendingRequest: false })\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { email, password, sendingRequest, error } = this.state\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<MenuDiv>\r\n\t\t\t\t\t<MenuHeader size='large'>\r\n\t\t\t\t\t\t<i>Продукция на участках</i>\r\n\t\t\t\t\t</MenuHeader>\r\n\t\t\t\t</MenuDiv>\r\n\t\t\t\t<SSegment basic>\r\n\t\t\t\t\t<Form error={!!error}>\r\n\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t<label>E-mail</label>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\t\tplaceholder='E-mail'\r\n\t\t\t\t\t\t\t\tref={ref => this.email = ref} \r\n\t\t\t\t\t\t\t\tonChange={() => this.handleInputChange('email')} />\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t<label>Пароль</label>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\tplaceholder='Пароль'\r\n\t\t\t\t\t\t\t\tref={ref => this.password = ref} \r\n\t\t\t\t\t\t\t\tonChange={() => this.handleInputChange('password')} />\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\theader='Войти не удалось..'\r\n\t\t\t\t\t\t\tcontent={error} />\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tfloated='right'\r\n\t\t\t\t\t\t\tdisabled={!email || !password || sendingRequest}\r\n\t\t\t\t\t\t\tloading={sendingRequest}\r\n\t\t\t\t\t\t\tonClick={this.submit} >\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</SSegment>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tgraphql(login, {\r\n\t\tname: 'login',\r\n\t\toptions: {\r\n\t\t\tfetchPolicy: 'no-cache'\r\n\t\t}\r\n\t})\r\n)(LoginPage)","import gql from 'graphql-tag'\r\n\r\nexport const allDepts = gql`\r\n  query AllDepts {\r\n    depts {\r\n      id\r\n      name\r\n      type\r\n      prods {\r\n        id\r\n        melt\r\n        meltShift\r\n        number\r\n        year\r\n        isSpoiled\r\n        hasDefect\r\n        progress\r\n        htmlNote\r\n        model {\r\n          id\r\n          name\r\n          article\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const deptFragment = gql`\r\n  fragment myDept on Dept {\r\n    id\r\n    name\r\n    type\r\n    prods {\r\n      id\r\n      melt\r\n      meltShift\r\n      number\r\n      year\r\n      isSpoiled\r\n      hasDefect\r\n      progress\r\n      htmlNote\r\n      model {\r\n        id\r\n        name\r\n        article\r\n      }\r\n    }\r\n  }\r\n`","import gql from 'graphql-tag'\r\n\r\nexport const upsertProd = gql`\r\n  mutation UpsertProd ($input: ProdInput!) {\r\n    upsertProd(input: $input) {\r\n      id\r\n      melt\r\n      meltShift\r\n      number\r\n      year\r\n      isSpoiled\r\n      hasDefect\r\n      progress\r\n      htmlNote\r\n      model {\r\n        id\r\n        name\r\n        article\r\n      }\r\n      dept {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const moveProds = gql`\r\n  mutation moveProds ( $to: ID!, $prodIds: [ID!]! ) {\r\n    moveProds (\r\n      to: $to,\r\n      prodIds: $prodIds\r\n    ) {\r\n      prods {\r\n        id\r\n        dept {\r\n          id\r\n        }\r\n      }\r\n      to\r\n    }\r\n  }\r\n`","import React, { Component } from 'react'\r\nimport { graphql, compose } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { Modal, Form, Icon, Button } from 'semantic-ui-react'\r\n\r\nimport { upsertProd } from '../graphql/prod'\r\nimport { deptFragment } from '../graphql/dept'\r\n\r\nconst allDeptsAndModelsQuery = gql`\r\n  query allDeptsAndModelsQuery {\r\n    depts {\r\n      id\r\n      name\r\n    }\r\n    models {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nclass CRUProdModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      deptId: '',\r\n      modelId: '',\r\n      melt: '',\r\n      meltShift: '',\r\n      number: '',\r\n      year: '',\r\n      progress: '',\r\n      hasDefect: false,\r\n      isSpoiled: false,\r\n      deptIdErr: false,\r\n      modelIdErr: false,\r\n      meltErr: false,\r\n      meltShiftErr: false,\r\n      numberErr: false,\r\n      yearErr: false,\r\n      progressErr: false\r\n    }\r\n    if (props.mode === 'edit') {\r\n      this.state = {\r\n        ...this.state,\r\n        ...props.prod\r\n      }\r\n      // replace nulls with '' for React controlled components to work\r\n      for(let k in this.state) {(this.state[k] === null) && (this.state[k] = '')}\r\n    }\r\n  }\r\n  open = () => this.setState({ open: true })\r\n  close = () => this.setState({ open: false })\r\n  handleSelChange = (event, {name, value, required}) => {\r\n    //style input as warning if value is not appropriate\r\n    const warn = (value === '' && required) ? true : false\r\n    this.setState({\r\n      [name]: value,\r\n      [`${name}Err`]: warn\r\n    })\r\n    console.log(`Selected: ${ value}`)\r\n  }\r\n  handleIntChange = (event, {name, value, min, max, required}) => {\r\n    //in case of an error keep empty string for React controlled component\r\n    const intValue = parseInt(value, 10) || (parseInt(value, 10) === 0 ? 0 : '')\r\n    //style input as warning if value is not appropriate\r\n    const warn = (intValue === '' && !required) ? false : (intValue < min || max < intValue)\r\n    this.setState({\r\n      [name]: intValue,\r\n      [`${name}Err`]: warn\r\n    })\r\n  }\r\n  changeStatus = (e, {name}) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    const curVal = this.state[name]\r\n    // reset statuses\r\n    this.setState({\r\n      hasDefect: false,\r\n      isSpoiled: false\r\n    })\r\n    // if supposed, activate status\r\n    if (!curVal) {\r\n      this.setState({ [name]: true })\r\n    }\r\n  }\r\n  confirm = () => {\r\n    const mode = this.props.mode\r\n    //VALIDATION\r\n    const requiredFields = (mode === 'create') ?\r\n      ['deptId', 'modelId', 'melt', 'number', 'year'] :\r\n      ['melt', 'number', 'year']\r\n    let shouldExit = false\r\n    //check for empty required fields and setting corresponding errors\r\n    // @ts-ignore\r\n    this.setState(Object.assign(...requiredFields.map(field => {\r\n      if (this.state[field] === '') {\r\n        shouldExit = true\r\n        return ({[`${field}Err`]: true})\r\n      }\r\n      return false\r\n    })))\r\n    //check for other Form errors\r\n    requiredFields.forEach((field) => {\r\n      if (this.state[`${field}Err`]) { shouldExit = true }\r\n    })\r\n    //terminate if validation failed\r\n    if (shouldExit) {return null}\r\n    const { id, deptId, modelId, melt, number, year } = this.state\r\n    const meltShift = this.state.meltShift || null\r\n    const progress = this.state.progress || null\r\n    const hasDefect = this.state.hasDefect || null\r\n    const isSpoiled = this.state.isSpoiled || null\r\n    const input = {\r\n      deptId,\r\n      modelId,\r\n      melt,\r\n      meltShift,\r\n      number,\r\n      year,\r\n      progress,\r\n      hasDefect,\r\n      isSpoiled\r\n    }\r\n    if (mode === 'create') {\r\n      this.props.upsertProd({\r\n        variables: {\r\n          input: { ...input }\r\n        }\r\n      })\r\n    } else if (mode === 'edit') {\r\n      input.id = id\r\n      this.props.upsertProd({\r\n        variables: {\r\n          input: { ...input }\r\n        }\r\n      })\r\n    }\r\n    this.close()\r\n  }\r\n  render() {\r\n    const { open, deptId, modelId, melt, meltShift, number, year, progress, hasDefect, isSpoiled, deptIdErr, modelIdErr, meltErr, meltShiftErr, numberErr, yearErr, progressErr } = this.state\r\n    const { trigger, mode } = this.props\r\n    let deptOptions = [{ text: 'Участок ', value: '' }]\r\n    let modelOptions = [{ text: 'Вид продукции', value: '' }]\r\n    if (mode === 'create') {\r\n      const query = this.props.allDeptsAndModelsQuery\r\n      deptOptions = !query ? [ { text: 'Участок ', value: '' } ] :\r\n      query.loading ? [ { text: 'Загрузка списка', value: '' } ] :\r\n      query.error ? [ { text: 'Ошибка загрузки списка', value: '' } ] :\r\n      query.depts.map(dept => {\r\n        return {\r\n          text: dept.name,\r\n          value:  dept.id\r\n        }\r\n      })\r\n      modelOptions = !query ? [ { text: 'Вид продукции', value: '' } ] :\r\n      query.loading ? [ { text: 'Загрузка списка', value: '' } ] :\r\n      query.error ? [ { text: 'Ошибка загрузки списка', value: '' } ] :\r\n      query.models.map(model => {\r\n        return {\r\n          text: model.name,\r\n          value:  model.id\r\n        }\r\n      })\r\n    } else if (mode === 'edit') {\r\n\r\n    }\r\n    return (\r\n      <Modal\r\n        trigger = { trigger }\r\n        open={open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n      >\r\n        <Modal.Header as='h2'>{mode === 'create' ? 'Добавить' : 'Редактировать'} продукцию </Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={() => this.confirm()}>\r\n            { (mode === 'create') &&\r\n              <Form.Select label='Участок' name='deptId' options={deptOptions} onChange={this.handleSelChange} value={deptId} error={deptIdErr} required />\r\n            }\r\n            { (mode === 'create') &&\r\n              <Form.Select label='Вид продукции' name='modelId' options={modelOptions} onChange={this.handleSelChange} value={modelId} error={modelIdErr} required />\r\n            }\r\n            <Form.Group widths='equal'>\r\n              <Form.Input label='Плавка' placeholder='Плавка' required\r\n                name='melt' type='number' min='0' max='999' error={meltErr}\r\n                onChange={this.handleIntChange} value={melt}/>\r\n              <Form.Input label='Плав. смена (если промаркирована)' placeholder='Пл. смена'\r\n                name='meltShift' type='number' min='0' max='3' error={meltShiftErr}\r\n                onChange={this.handleIntChange} value={meltShift}/>\r\n              <Form.Input label='Номер' placeholder='Номер' required\r\n                name='number' type='number' min='1' max='999' error={numberErr}\r\n                onChange={this.handleIntChange} value={number}/>\r\n              <Form.Input label='Год' placeholder='Год' required\r\n                name='year' type='number' min='16' max='18' error={yearErr}\r\n                onChange={this.handleIntChange} value={year}/>\r\n            </Form.Group>\r\n            <Form.Input label='Процент завершения' placeholder='%'\r\n              name='progress' type='number' min='0' max='100' error={progressErr}\r\n              onChange={this.handleIntChange} value={progress}/>\r\n            <Form.Field>\r\n              <label>Наличие дефектов</label>\r\n              <Button.Group>\r\n                <Button name='hasDefect'\r\n                  active={hasDefect || null}\r\n                  color={hasDefect ? 'orange' : null}\r\n                  onClick={this.changeStatus}\r\n                >Отклонение</Button>\r\n                <Button name='isSpoiled'\r\n                  active={isSpoiled || null}\r\n                  color={isSpoiled ? 'red' : null}\r\n                  onClick={this.changeStatus}\r\n                >Брак</Button>\r\n              </Button.Group>\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.close} color='red'>\r\n            <Icon name='remove' /> Отмена\r\n          </Button>\r\n          <Button onClick={this.confirm}>\r\n            <Icon name='checkmark' /> {mode === 'create' ? 'Добавить' : 'Сохранить'}\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(allDeptsAndModelsQuery, { name: 'allDeptsAndModelsQuery' }),\r\n  graphql(upsertProd, {\r\n    name: 'upsertProd',\r\n    options: {\r\n      update: (cache, {data: reponseData}) => {\r\n\t\t\t\tconst newProd = reponseData.upsertProd\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst id = `Dept:${newProd.dept.id}`\r\n\t\t\t\tconst fragment = deptFragment\r\n\t\t\t\tlet data = cache.readFragment({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tfragment\r\n        })\r\n        delete newProd.dept\r\n        if (!data.prods) data.prods = []\r\n\t\t\t\tdata.prods = [...data.prods.filter(p => p.id !== newProd.id), newProd]\r\n\t\t\t\tcache.writeFragment({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tfragment,\r\n\t\t\t\t\tdata\r\n\t\t\t\t})\r\n\t\t\t},\r\n      // refetchQueries: ['allDepts']\r\n    }\r\n  }),\r\n)(CRUProdModal)\r\n","import React, { Component } from 'react'\r\nimport { graphql } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { Modal, Form, Icon, Button } from 'semantic-ui-react'\r\n\r\nconst AllDeptsAndModelsQuery = gql`\r\n  query AllDeptsAndModelsQuery {\r\n    depts {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nclass MoveModal extends Component {\r\n  state = {\r\n    open: false,\r\n    deptId: ''\r\n  }\r\n  open = () => this.setState({ open: true })\r\n  close = () => this.setState({ open: false })\r\n  handleChange = (event, e) => {\r\n    if (e) {\r\n      // console.log(value);\r\n      this.setState({deptId: e.value})\r\n      console.log(`Selected: ${ e.value}`)\r\n    }\r\n  }\r\n  confirm = () => {\r\n    const { deptId } = this.state\r\n    this.props.moveProds(deptId)\r\n    this.close()\r\n  }\r\n  render() {\r\n    const { open, deptId } = this.state\r\n    const { trigger } = this.props\r\n    const query = this.props.AllDeptsAndModelsQuery\r\n    const deptOptions = !query ? [ { text: 'Участок ', value: '' } ] :\r\n      query.loading ? [ { text: 'Загрузка списка', value: '' } ] :\r\n      query.error ? [ { text: 'Ошибка загрузки списка', value: '' } ] :\r\n      query.depts.map(dept => {\r\n        return {\r\n          text: dept.name,\r\n          value:  dept.id\r\n        }\r\n      })\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        open={open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n      >\r\n        <Modal.Header as='h2'> Отправить продукцию </Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={this.confirm}>\r\n            <Form.Select label='Куда' options={deptOptions} onChange={this.handleChange} value={deptId} required/>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.close} color='red'>\r\n            <Icon name='remove' /> Отмена\r\n          </Button>\r\n          <Button onClick={this.confirm}>\r\n            <Icon name='arrow right' /> Отправить\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default graphql(AllDeptsAndModelsQuery, { name: 'AllDeptsAndModelsQuery' })(MoveModal)\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport { Menu, Icon, Dropdown} from 'semantic-ui-react'\r\nimport CRUProdModal from './CRUProdModal'\r\nimport MoveModal from './MoveModal'\r\n\r\nconst allTypes = [{\r\n  type: 'OWNED',\r\n  title: 'Наши'\r\n},{\r\n  type: 'TRANSPORT',\r\n  title: 'Транспорт'\r\n},{\r\n  type: 'PARTNER',\r\n  title: 'Подрядчики'\r\n},{\r\n  type: 'CLIENT',\r\n  title: 'Клиенты'\r\n}]\r\n\r\nconst NavBar = ({ refreshToken, visibleDeptTypes, filterDeptType, moveProds }) => {\r\n  return (\r\n    <Menu size='huge' inverted >\r\n      <Menu.Item header>KOMZ</Menu.Item>\r\n      <Menu.Menu>\r\n        {/* <Menu.Item icon name='home' as={ NavLink } exact to='/' color='grey'>\r\n          <Icon name='home' />\r\n        </Menu.Item> */}\r\n        <CRUProdModal mode='create' id='' trigger={\r\n          <Menu.Item icon link name='create' color='grey'>\r\n            <Icon name='plus' />\r\n          </Menu.Item>\r\n        } />\r\n        <MoveModal moveProds={moveProds} trigger={\r\n          <Menu.Item icon link name='move' color='grey'>\r\n            <Icon name='arrow right' />\r\n          </Menu.Item>\r\n        } />\r\n      </Menu.Menu>\r\n      <Menu.Menu position='right'>\r\n        <Dropdown item icon='setting' simple className='komz-navBarSettingsItem'>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Header>Участки</Dropdown.Header>\r\n            {allTypes.map(({ type, title }) => {\r\n              const active = _.includes(visibleDeptTypes, type)\r\n              return (\r\n                <Dropdown.Item\r\n                  key={type}\r\n                  type={type}\r\n                  active={_.includes(visibleDeptTypes, type)}\r\n                  onClick={(e, t) => filterDeptType(t.type)}\r\n                >\r\n                  <Icon name={active ? 'checkmark box' : 'square outline'} />\r\n                  {title}\r\n                </Dropdown.Item>\r\n            )})}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Menu.Item\r\n          icon\r\n          onClick={() => refreshToken(null)}\r\n        >\r\n          <Icon name='sign out' />\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\nimport { List, Progress, Label, Button } from 'semantic-ui-react'\r\nimport CRUProdModal from './CRUProdModal'\r\n\r\nclass ProdItem extends Component {\r\n  state = {\r\n    checked: false,\r\n  }\r\n\r\n  handleClick = (e, d) => {\r\n    const { checked } = this.state\r\n    const { id } = this.props.prod\r\n    this.setState({checked: !checked})\r\n    this.props.selectProd(id)\r\n  }\r\n\r\n  // TODO solve problem: unable to stopPropagation!\r\n  preventPropagation = (e, eb) => {\r\n    // e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n\r\n  render() {\r\n    const {checked} = this.state\r\n    const {melt, meltShift, number, year, progress, isSpoiled, hasDefect} = this.props.prod\r\n\r\n    return (\r\n      <List.Item onClick={this.handleClick} active={checked}>\r\n        <List.Content>\r\n          <List.Content floated='right'>\r\n            {/* <Button attached='right'>Edit</Button> */}\r\n            {/* <Button size='mini' onClick={this.preventPropagation}>Edit</Button> */}\r\n            {/* <Button size='mini' icon='edit' onClick={this.preventPropagation} /> */}\r\n            {/* <Button size='mini' content='Редакт' icon='edit' labelPosition='right' onClick={this.preventPropagation} /> */}\r\n            {/* <List.Icon name='edit' onClick={this.edit} /> */}\r\n            <CRUProdModal mode='edit' prod={this.props.prod} trigger={\r\n              <Button size='mini' content='Редакт' icon='edit' labelPosition='right' onClick={this.preventPropagation} />\r\n            } />\r\n          </List.Content>\r\n          <List.Content>\r\n            <List.Icon name={checked ? 'checkmark box' : 'square outline'} />\r\n            {melt}{(meltShift > 0) && '.'+meltShift}-{number}-{year}\r\n            { progress &&\r\n              <Label size='small'>{progress || '_'}%</Label>\r\n            }\r\n            { hasDefect &&\r\n              <Label color='orange' tag size='small'>ОТКЛОНЕНИЕ</Label>\r\n            }\r\n            { isSpoiled &&\r\n              <Label color='red' tag size='small'>БРАК</Label>\r\n              // <List.Icon floated='right' name='broken chain' color='red' />\r\n            }\r\n          </List.Content>\r\n\r\n        </List.Content>\r\n        { progress &&\r\n          <Progress percent={progress} indicating autoSuccess attached='bottom' />\r\n        }\r\n      </List.Item>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProdItem\r\n","import React, { Component } from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\nimport ProdItem from './ProdItem'\r\n\r\nclass ProdList extends Component {\r\n  render() {\r\n\r\n    const prods = this.props.prods\r\n\r\n    return (\r\n      <List divided selection size='medium'>\r\n        {prods.map((prod) => <ProdItem prod={prod} key={prod.id} selectProd={this.props.selectProd}/>)}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProdList\r\n","import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport styled from 'styled-components'\r\nimport { Accordion, Icon, Label, Header } from 'semantic-ui-react'\r\nimport ProdList from './ProdList'\r\n\r\nconst AccordionTitle = styled(Accordion.Title)`\r\n  &&&& {\r\n    margin-top: 0;\r\n    padding-top: 0;\r\n    ${props => props.active && `{\r\n      padding-bottom: 0;\r\n    }`}\r\n  }\r\n`\r\nconst AccordionContent = styled(Accordion.Content)`\r\n  &&&& {\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nclass ModelList extends Component {\r\n\r\n  state = { activeIndex: [] }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = _.includes(activeIndex, index) ? _.without(activeIndex, index) : [...activeIndex, index]\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { activeIndex } = this.state\r\n\r\n    const deptModels = this.props.deptModels.map((deptModel, i) => {\r\n      const prods = deptModel.prods\r\n      const allProdsCount = prods.length\r\n      const prodsReadyCount = prods.filter(p => p.progress === 100).length\r\n      const prodsDefectCount = prods.filter(p => p.hasDefect).length\r\n      const prodsSpoiledCount = prods.filter(p => p.isSpoiled).length\r\n      const prodsInProgressCount = allProdsCount - prodsReadyCount - prodsSpoiledCount\r\n\r\n      const { id } = deptModel\r\n      const active = _.includes(activeIndex, id)\r\n\r\n      return (\r\n        <div key={id + '_deptModel'} >\r\n          <AccordionTitle\r\n            active={active}\r\n            index={id}\r\n            onClick={this.handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            <Header size='small' as='span'>{deptModel.model.name}\r\n              <Label color='grey'>\r\n                {allProdsCount}\r\n                <Label.Detail>шт</Label.Detail>\r\n              </Label>\r\n            </Header>\r\n            <Label.Group className='komz-ml-21px'>\r\n              {(prodsReadyCount > 0) &&\r\n                <Label basic>\r\n                  <Icon name='checkmark' color='green' />\r\n                  {prodsReadyCount}\r\n                  <Label.Detail>ГП</Label.Detail>\r\n                </Label>\r\n              }\r\n              {(prodsInProgressCount > 0) &&\r\n                <Label basic>\r\n                  {prodsInProgressCount}\r\n                  <Label.Detail>НЗП</Label.Detail>\r\n                </Label>\r\n              }\r\n              {(prodsDefectCount > 0) &&\r\n                <Label basic>\r\n                  <Icon name='warning sign' color='orange' />\r\n                  {prodsDefectCount}\r\n                  <Label.Detail>ОТКЛОН</Label.Detail>\r\n                </Label>\r\n              }\r\n              {(prodsSpoiledCount > 0) &&\r\n                <Label basic>\r\n                  <Icon name='broken chain' color='red' />\r\n                  {prodsSpoiledCount}\r\n                  <Label.Detail>БРАК</Label.Detail>\r\n                </Label>\r\n              }\r\n            </Label.Group>\r\n          </AccordionTitle>\r\n          {active &&\r\n            <AccordionContent active>\r\n              <ProdList prods={deptModel.prods} selectProd={this.props.selectProd} />\r\n            </AccordionContent>\r\n          }\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Accordion>\r\n        {deptModels}\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModelList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n// S prefix is used throughout the App just to have flexebility (two names for each component)\r\n// N prefix stands for NativeCssImplementation of a component (When html element is styled instead of semantic ui component) \r\n\r\nimport { \r\n\tHeader as SHeader, \r\n\t// Label as SLabel,\r\n\tIcon as SIcon, \r\n\tButton as SButton,\r\n\tPopup as SPopup,\r\n\tDropdown as SDropdown\r\n} from 'semantic-ui-react'\r\n\r\nexport const theme = {\r\n\twidths: {\r\n\t\tformLabel: '122px', //required calc(110px + 0.857143em)\r\n\t\tdetailsPL: '55px'\r\n\t},\r\n\tcolors: {\r\n\t\tgreen: '#016936',\r\n\t\tblue: '#0E6EB8'\r\n\t}\r\n}\r\nconst getThemeColor = (color) => theme.colors[color] || color\r\nconst baseSet = ({ theme, w, m, ml, pl, fs, fw, c, lh, ta, ws }) => {\r\n\treturn `\r\n\t\t${w ? `width: ${theme.widths[w] || w};`: ''}\r\n\t\t${m ? `margin: ${m};`: ''}\r\n\t\t${ml ? `margin-left: ${ml};`: ''}\r\n\t\t${pl ? `padding-left: ${pl};`: ''}\r\n\t\t${fs ? `font-size: ${fs};`: ''}\r\n\t\t${fw ? `font-weight: ${fw};`: ''}\r\n\t\t${c ? `color: ${c};`: ''}\r\n\t\t${lh ? `line-height: ${lh};`: ''}\r\n\t\t${ta ? `text-align: ${ta};`: ''}\r\n\t\t${ws ? `word-spacing: ${ws};`: ''}\r\n\t`\r\n}\r\n\r\nconst DivWithFilteredProps = ({ ml, inline, ...rest }) => (\r\n\t<div {...rest} />\r\n)\r\nexport const Div = styled(DivWithFilteredProps)`\r\n\t${props => props.inline && `display: inline-block;`}\r\n\t${props => baseSet(props)}\r\n`\r\n\r\nconst PWithFilteredProps = ({ ...rest }) => (\r\n\t<p {...rest} />\r\n)\r\nexport const P = styled(PWithFilteredProps)`\r\n\t${props => baseSet(props)}\r\n`\r\n\r\nconst SpanWithFilteredProps = ({ ml, ...rest }) => (\r\n\t<span {...rest} />\r\n)\r\nexport const Span = styled(SpanWithFilteredProps)`\r\n\t${props => baseSet(props)}\r\n`\r\n\r\nexport const A = styled.a`\r\n\tcursor: pointer;\r\n\t${props => props.cancel && `{\r\n\t\tpadding-left: 15px;\r\n\t\tcolor: rgba(0,0,0,.87);\r\n\t\t&:hover {\r\n\t\t\tcolor: #B03060;\r\n\t\t}\r\n\t}`}\r\n`\r\n\r\nconst HeaderWithFilteredProps = ({ inline, c, ...rest }) => (\r\n\t<SHeader {...rest} />\r\n)\r\nexport const Header = styled(HeaderWithFilteredProps)`\r\n\t&&&& {\r\n\t\t${props => baseSet(props)}\r\n\t}\r\n\t&&& {\r\n\t\t${props => props.inline && `{\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0 1rem;\r\n\t\t}`}\r\n\t}\r\n`\r\n\r\nexport const Label = styled.label`\r\n\twidth: ${props => props.theme.widths.formLabel} !important;\r\n\tmargin-right: 0 !important;\r\n`\r\n\r\nconst DropdownIcon = ({active, size, ...rest}) => (\r\n\t<SIcon {...rest}\r\n\t\tsize={size}\r\n\t\tname='dropdown'\r\n\t/>\r\n)\r\nexport const Caret = styled(DropdownIcon)`\r\n\ttransform: ${\r\n\t\tprops => !props.active && (\r\n\t\t\tprops.size === 'large'\r\n\t\t\t? 'translateX(0) translateY(0) rotate(-90deg) !important'\r\n\t\t\t: 'translateX(-3px) translateY(3px) rotate(-90deg) !important'\r\n\t\t)\r\n\t};\r\n`\r\n\r\nconst ButtonWithFilteredProps = ({ activeColor, menu, ...rest }) => (\r\n\t<SButton {...rest} />\r\n)\r\nexport const Button = styled(ButtonWithFilteredProps)`\r\n\t&&&& {\r\n\t\t${props => baseSet(props)}\r\n\t}\r\n\t&&& {\r\n\t\t&.compact {\r\n\t\t\tpadding: .5rem 1rem;\r\n\t\t}\r\n\t\t${props => props.activeColor && `{\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: ${getThemeColor(props.activeColor)} !important;\r\n\t\t\t}\r\n\t\t\t&.active {\r\n\t\t\t\tcolor: ${getThemeColor(props.activeColor)} !important;\r\n        \t}\r\n\t\t}`}\r\n\t\t${props => props.menu && `{\r\n\t\t\tmargin: .25rem 0 .25rem 0.5rem;\r\n\t\t\tz-index: 3;\r\n\t\t}`}\r\n\t}\r\n`\r\n\r\nconst SectionPropFiltered = ({ head, minor, small, secondary, noIndent, topBorder, bottomBorder, children, ...rest }) => (\r\n\t\t<div\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n)\r\nexport const Section = styled(SectionPropFiltered)`\r\n\t& {\r\n\t\twidth: 100%\r\n\t\tpadding: 1em 1em 1em 1em;\r\n\t\t${props => props.head && `{\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding-top: 0;\r\n\t\t\tpadding-bottom: 0;\r\n\t\t}`}\r\n\t\t${props => props.onClick && `{\r\n\t\t\tcursor: pointer;\r\n\t\t}`}\r\n\t\t${props => props.minor && `{\r\n\t\t\tmin-height: 3.5em;\r\n\t\t}`}\r\n\t\t${props => props.small && `{\r\n\t\t\tmin-height: 2.5em;\r\n\t\t}`}\r\n\t\t${props => props.secondary && `{\r\n\t\t\tbackground: #f3f4f5;\r\n\t\t\tcolor: rgba(0,0,0,.6);\r\n\t\t}`}\r\n\t\t${props => props.noIndent && `{\r\n\t\t\tpadding-left: 0;\r\n\t\t}`}\r\n\t\t${props => props.topBorder && `{\r\n\t\t\tborder-top: 1px solid rgba(34,36,38,.15);\r\n\t\t}`}\r\n\t\t${props => props.bottomBorder && `{\r\n\t\t\tborder-bottom: 1px solid rgba(34,36,38,.1);\r\n\t\t}`}\r\n\t}\r\n`\r\n\r\nconst PopupWithFilteredProps = ({ showIf, ...rest }) => (\r\n\t<SPopup {...rest} />\r\n)\r\nexport const Popup = styled(PopupWithFilteredProps)`\r\n\t&&& {\r\n\t\t${props => !props.showIf && `{\r\n\t\t\topacity: 0;\r\n\t\t}`}\r\n\t}\r\n`\r\n\r\nexport const Dropdown = styled(SDropdown)`\r\n\t&&&&&& {\r\n\t\twidth: 350px;\r\n\t\t&:hover {\r\n\t\t\tborder-color: rgba(34, 36, 38, 0.15);\r\n\t\t}\r\n\t}\r\n`\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Section, Caret } from './styled-semantic'\r\n\r\nconst SIcon = styled(Icon)`\r\n\t&&& {\r\n\t\tbox-sizing: content-box;\r\n\t\twidth: calc(35px - 1em);\r\n\t\tmargin: 0 0.5em;\r\n\t}\r\n`\r\nconst SCaret = styled(Caret)`\r\n\t&&& {\r\n\t\tbox-sizing: content-box;\r\n\t\twidth: calc(35px - 1em);\r\n\t\tmargin: 0 0.5em;\r\n\t}\r\n`\r\n\r\nconst DetailsHeaderContainer = ({ closeDetails, expanded, onClick, children }) => {\r\n\tconst headerType = !!closeDetails ? 'main' : 'expandable'\r\n\treturn (\r\n\t\t<Section\r\n\t\t\thead\r\n\t\t\tnoIndent\r\n\t\t\tbottomBorder\r\n\t\t\tminor\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t{headerType === 'main'\r\n\t\t\t\t?\t<SIcon link\r\n\t\t\t\t\t\tsize='big'\r\n\t\t\t\t\t\tname='cancel'\r\n\t\t\t\t\t\tonClick={closeDetails}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\t<SCaret\r\n\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\tactive={expanded ? 1 : 0}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t{children}\r\n\t\t</Section>\r\n\t)\r\n}\r\n\r\nexport default DetailsHeaderContainer\r\n","import React from 'react'\r\n\r\nimport { Span } from './styled-semantic'\r\n\r\nconst DetailsHeaderSubitle = ({ text }) => {\r\n\treturn (\r\n\t\t<Span\r\n\t\t\tml='10px'\r\n\t\t\tfs='1rem'\r\n\t\t\tc='rgba(0,0,0,.6)'\r\n\t\t\tws='0.5em'\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</Span>\r\n\t)\r\n}\r\n\r\nexport default DetailsHeaderSubitle\r\n","import React from 'react'\r\n\r\nimport { Header } from './styled-semantic'\r\nimport DetailsHeaderSubitle from './DetailsHeaderSubitle'\r\n\r\nconst DetailsHeaderTitle = ({ title, subtitle, titleSize }) => {\r\n\treturn (\r\n\t\t<Header\r\n\t\t\tm='0'\r\n\t\t\tsize={titleSize || 'medium'}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t\t{subtitle &&\r\n\t\t\t\t<DetailsHeaderSubitle\r\n\t\t\t\t\ttext={subtitle}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default DetailsHeaderTitle\r\n","import React, { Component } from 'react'\r\n\r\nimport DetailsHeaderContainer from './DetailsHeaderContainer'\r\nimport DetailsHeaderTitle from './DetailsHeaderTitle'\r\n\r\nclass DetailsHeader extends Component {\r\n\trender() {\r\n\t\tconst { expanded, title, subtitle, titleSize, onClick } = this.props\r\n\t\treturn (\r\n\t\t\t<DetailsHeaderContainer\r\n\t\t\t\texpanded={expanded}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t<DetailsHeaderTitle\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tsubtitle={subtitle}\r\n\t\t\t\t\ttitleSize={titleSize}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* { id !== 'new' &&\r\n\t\t\t\t\t<DetailsHeaderButtons\r\n\t\t\t\t\t\teditMode={editMode || false}\r\n\t\t\t\t\t\tedit={() => setDetails({type, id, editMode: true})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t} */}\r\n\t\t\t</DetailsHeaderContainer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DetailsHeader\r\n","import React, { Component } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport { Section } from './styled-semantic'\r\n\r\nimport DetailsHeader from './DetailsHeader'\r\n\r\nconst OuterSection = styled(Section)`\r\n  &&&& { \r\n    padding: 0;\r\n    ${props => props.expanded && `{\r\n      margin-top: -1px;\r\n      border-bottom-color: rgba(34, 36, 38, 0.15);\r\n    }`}\r\n  }\r\n`\r\nconst SSection = styled(Section)`\r\n  &&&& { \r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nclass CollapsableSection extends Component {\r\n  state = {\r\n    expanded: false\r\n  }\r\n  render() {\r\n    const { expanded } = this.state\r\n    const { title, subtitle, children, size } = this.props\r\n    return (\r\n      <OuterSection\r\n        expanded={expanded ? 1 : 0}\r\n        topBorder={expanded}\r\n        bottomBorder={expanded}\r\n      >\r\n        <DetailsHeader\r\n          expanded={expanded}\r\n          title={title}\r\n          subtitle={subtitle}\r\n          titleSize={size || 'small'}\r\n          onClick={() => this.setState({ expanded: !expanded})}\r\n        />\r\n          {expanded &&\r\n            <SSection>\r\n              {children}\r\n            </SSection>\r\n          }\r\n      </OuterSection>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CollapsableSection\r\n","import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport styled from 'styled-components'\r\nimport { Accordion, Segment } from 'semantic-ui-react'\r\n\r\nimport ModelList from './ModelList'\r\nimport CollapsableSection from './shared/CollapsableSection';\r\n\r\nconst SSegment = styled(Segment)`\r\n  &&&& {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nclass DeptList extends Component {\r\n  render() {\r\n    const { depts: propDepts } = this.props\r\n    const depts = _.cloneDeep(propDepts).map(d => ({\r\n      ...d,\r\n      prodsCount: d.prods.length,\r\n      deptModels: _(d.prods).sortBy('model.name').groupBy('model.id').reduce(\r\n        function (dMs, prods) {\r\n          dMs.push({\r\n            id: prods[0].model.id,\r\n            model: { ...prods[0].model },\r\n            prods: _.sortBy(prods.map(p => {\r\n              delete p.model\r\n              return p\r\n            }), function(o) { return -(o.progress || !o.progress); })\r\n          })\r\n          return dMs\r\n        }, []\r\n      ),\r\n      prods: 'cleared'\r\n    }))\r\n    // console.log('depts > ', depts)\r\n    return (\r\n      <Accordion fluid>\r\n        {depts.map((dept, i) => {\r\n          return (\r\n            <SSegment\r\n              key={dept.id}\r\n              color={\r\n                dept.type === 'TRANSPORT' ? 'green' :\r\n                dept.type === 'PARTNER' ? 'blue' :\r\n                dept.type === 'CLIENT' ? 'purple' :\r\n                'black'\r\n            }>\r\n              <CollapsableSection\r\n                size='large'\r\n                title={dept.name}\r\n                subtitle={`(${dept.prodsCount})`}\r\n              >\r\n                <ModelList deptModels={dept.deptModels} selectProd={this.props.selectProd}/>\r\n              </CollapsableSection>\r\n            </SSegment>\r\n          )}\r\n        )}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default DeptList\r\n","import React from 'react'\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst DataLoadErrorMessage = (props) => {\r\n  return (\r\n    <Message warning>\r\n      <p><Icon name='warning' />\r\n      <b>Ошибка загрузки данных {props.dataTitle}</b></p>\r\n      <p><u>Попробуйте следующее:</u></p>\r\n      <p>1. Обновить страницу</p>\r\n      <p>2. Заново войти в систему</p>\r\n      <p>3. Если ошибка сохранится, сообщите Администратору</p>\r\n      <p>4. Возможно, нарушены права доступа</p>\r\n    </Message>\r\n  )\r\n}\r\nexport default DataLoadErrorMessage\r\n","import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport { graphql, compose } from 'react-apollo'\r\nimport { allDepts } from '../graphql/dept'\r\nimport { moveProds } from '../graphql/prod'\r\n\r\nimport { Container } from 'semantic-ui-react'\r\n\r\nimport NavBar from './NavBar'\r\nimport DeptList from './DeptList'\r\nimport DataLoadErrorMessage from './common/DataLoadErrorMessage'\r\n\r\nclass Store extends Component {\r\n  state={\r\n    selectedProds: [],\r\n    visibleDeptTypes: ['OWNED', 'TRANSPORT']\r\n  }\r\n  selectProd = (prodId) => {\r\n    const { selectedProds } = this.state\r\n    const newList = _.includes(selectedProds, prodId) ? _.without(selectedProds, prodId) : [...selectedProds, prodId]\r\n    this.setState({ selectedProds: newList })\r\n  }\r\n  filterDeptType = (type) => {\r\n    console.log('type > ', type)\r\n    const {visibleDeptTypes} = this.state\r\n    const newList = _.includes(visibleDeptTypes, type) ? _.without(visibleDeptTypes, type) : [...visibleDeptTypes, type]\r\n    this.setState({ visibleDeptTypes: newList })\r\n  }\r\n  moveProds = async (deptId) => {\r\n    const { selectedProds } = this.state\r\n    try {\r\n      await this.props.moveProds({\r\n        variables: {\r\n          to: deptId,\r\n          prodIds: selectedProds\r\n        }\r\n      })\r\n      selectedProds.forEach(id => this.selectProd(id))\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    const {visibleDeptTypes} = this.state\r\n    const { refreshToken, allDepts: { loading, error, depts } } = this.props\r\n    return (\r\n      <Container text>\r\n        <NavBar\r\n          refreshToken={refreshToken}\r\n          visibleDeptTypes={visibleDeptTypes}\r\n          filterDeptType={this.filterDeptType}\r\n          moveProds={this.moveProds}\r\n        />\r\n        { loading ? <div>Загрузка</div> :\r\n          error ? <DataLoadErrorMessage dataTitle='DeptList' /> :\r\n          <DeptList\r\n            depts={depts.filter(dept => _.includes(visibleDeptTypes, dept.type) ? true : false)}\r\n            selectProd={this.selectProd}\r\n          />\r\n        }\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  graphql( allDepts, { name: 'allDepts' }),\r\n  graphql( moveProds, {\r\n    name: 'moveProds',\r\n    options: {\r\n      update: (cache, { data: reponseData }) => {\r\n        const { prods, to }= reponseData.moveProds\r\n        const query = allDepts\r\n        const data = cache.readQuery({ query })\r\n        const allMovedProds = _(prods).groupBy('dept.id').reduce(\r\n          function(allMovedProds, prods, deptId) {\r\n            const dept = data.depts.find(d => d.id === deptId)\r\n            const deptMovedProds = _.intersectionBy(dept.prods, prods, 'id')\r\n            dept.prods = _.differenceBy(dept.prods, prods, 'id')\r\n            return [...allMovedProds, ...deptMovedProds]\r\n          }, []\r\n        )\r\n        console.log('allMovedProds > ', allMovedProds)\r\n        const dept = data.depts.find(d => d.id === to)\r\n        dept.prods = [...dept.prods, ...allMovedProds]\r\n        cache.writeQuery({ query, data })\r\n      },\r\n      // refetchQueries: ['allDepts']\r\n    }\r\n  })\r\n) (Store)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport { AUTH_TOKEN } from './constants'\r\nimport { isTokenExpired } from './utils/jwtHelper'\r\n\r\nimport { Query } from 'react-apollo'\r\nimport { me } from './graphql/user'\r\n\r\nimport LoginPage from './components/shared/LoginPage'\r\nimport Store from './components/Store';\r\n\r\nclass Root extends Component {\r\n\tstate = {\r\n\t\ttoken: this.props.token\r\n\t}\r\n\t //verify localStorage check\r\n\tcomponentDidMount() {\r\n\t\tthis.bootStrapData()\r\n\t}\r\n\tbootStrapData = () => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem(AUTH_TOKEN)\r\n\t\t\tif (token !== null && token !== undefined) {\r\n\t\t\t\tconst expired = isTokenExpired(token)\r\n\t\t\t\tif (!expired) {\r\n\t\t\t\t\tthis.setState({ token: token })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.refreshToken(null)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// maybe TODO - provide fatal error message\r\n\t\t \t console.log('')\r\n\t\t}\r\n\t}\r\n\trefreshToken = (token) => {\r\n\t\tif (token) {\r\n\t\t  \tlocalStorage.setItem(AUTH_TOKEN, token)\r\n\t\t} else {\r\n            localStorage.removeItem(AUTH_TOKEN)\r\n            this.props.client.resetStore()\r\n\t\t}\r\n\t\tthis.setState({ token })\r\n\t}\r\n\trender() {\r\n\t\tconst { token } = this.state\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t{ !token \r\n\t\t\t\t  ?\t<LoginPage refreshToken={this.refreshToken} />\r\n\t\t\t\t  : <Query query={me} >\r\n\t\t\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\t\t\tif (loading) return null\r\n\t\t\t\t\t\t\t\tif (error) return `Error!: ${error.message}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Store\r\n                    me={data.me}\r\n                    refreshToken={this.refreshToken}\r\n                  />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Query> \r\n\t\t\t\t}\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Root\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport ApolloClient from 'apollo-boost'\r\nimport { ApolloProvider } from 'react-apollo'\r\n\r\nimport { AUTH_TOKEN } from './constants'\r\n\r\n// @ts-ignore\r\nconst client = new ApolloClient({\r\n\t// uri: 'http://localhost:4000',\r\n\t// uri: 'https://now-advanced.now.sh',\r\n\turi: 'https://env-1542080.mircloud.ru',\r\n\trequest: (operation) => {\r\n\t\tconst token = localStorage.getItem(AUTH_TOKEN)\r\n\t\toperation.setContext({\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token ? `Bearer ${token}` : '',\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst token = localStorage.getItem(AUTH_TOKEN)\r\n\r\nReactDOM.render(\r\n\t<ApolloProvider client={client}>\r\n\t\t<App\r\n      token={token}\r\n      client={client}\r\n    />\r\n\t</ApolloProvider>\r\n, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}